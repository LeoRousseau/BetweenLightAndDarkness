using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.Rendering.PostProcessing;

public class CheatMenu : MonoBehaviour
{
    public PostProcessProfile profile;
    public StateMachineMonsterController monsterController;
    public float postExposureDefaultValue;
    public float postExposureIncrement;


    // Start is called before the first frame update
    void Start()
    {
        if(monsterController == null)
        {
            Debug.LogWarning("Need to indicate monsterController in CheatMenu");
            monsterController = FindObjectOfType<StateMachineMonsterController>();
        }
    }

    private void OnDestroy()
    {
        ColorGrading grading = profile.GetSetting<ColorGrading>();
        grading.postExposure.value = postExposureDefaultValue;
    }

    // Update is called once per frame
    void Update()
    {
        if (Input.GetButtonDown("lightUp"))
        {
            ColorGrading grading = profile.GetSetting<ColorGrading>();
            grading.postExposure.value += postExposureIncrement;
<<<<<<< HEAD
            Debug.Log("Exposure : " + grading.postExposure.value);
=======
>>>>>>> eb9d8d26f0129152e01c3253a6b18209d92094be
        }
        if (Input.GetButtonDown("lightDown"))
        {
            ColorGrading grading = profile.GetSetting<ColorGrading>();
            grading.postExposure.value -= postExposureIncrement;
<<<<<<< HEAD
            if (grading.postExposure.value < 0)
                grading.postExposure.value = 0;

            Debug.Log("Exposure : " + grading.postExposure.value);
=======
>>>>>>> eb9d8d26f0129152e01c3253a6b18209d92094be
        }

        if (Input.GetButtonDown("toggleInvisibility"))
        {
            //Change state of player for the IA
            if (monsterController == null)
            {
                Debug.LogWarning("Need to indicate monsterController in the CheatMenu");
                return;
            }
            monsterController.isPlayerVisible = !monsterController.isPlayerVisible;
            Debug.Log("Invisibility activated :" + !monsterController.isPlayerVisible);
        }

    }
   
}
